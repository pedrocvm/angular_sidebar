import{element,bootstrap,isFunction,module}from"angular";import{__rest}from"tslib";import"reflect-metadata";const platformBrowserDynamic=()=>PlatformRef;class PlatformRef{static bootstrapModule(e,t={strictDi:!1}){let a;switch(typeof e){case"string":a=e;break;case"object":a=e.name;break;case"function":default:const t=e.module;if(!t)throw Error("Argument moduleType should be NgModule class, angular.module object or module name string");a=t.name}const n=!0===t.strictDi;element(document).ready(()=>{bootstrap(document.body,[a],{strictDi:n})})}}class ElementRef{constructor(e){return e.nativeElement=e[0],e}}var Declaration;!function(e){e.Component="Component",e.Directive="Directive",e.Pipe="Pipe"}(Declaration||(Declaration={}));const metadataKeys={declaration:"custom:declaration",name:"custom:name",bindings:"custom:bindings",require:"custom:require",options:"custom:options",listeners:"custom:listeners",viewChildren:"custom:viewChildren"};function kebabToCamel(e){return e.replace(/(-\w)/g,e=>e[1].toUpperCase())}function camelToKebab(e){return e.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase()}function getAttributeName(e){return e.substr(1,e.length-2)}function isAttributeSelector(e){return/^[\[].*[\]]$/g.test(e)}function getMetadata(e,t){return Reflect.getMetadata(e,t)}function defineMetadata(e,t,a){Reflect.defineMetadata(e,t,a)}function getTypeName(e){return getMetadata(metadataKeys.name,e)}function getTypeDeclaration(e){return getMetadata(metadataKeys.declaration,e)}const ngLifecycleHooksMap={ngOnInit:"$onInit",ngOnDestroy:"$onDestroy",ngDoCheck:"$doCheck",ngOnChanges:"$onChanges",ngAfterViewInit:"$postLink"};function Component(e){var{selector:t}=e,a=__rest(e,["selector"]);return e=>{a.controller=e;const n=isAttributeSelector(t),o=getMetadata(metadataKeys.bindings,e);o&&(n?(a.bindToController=o,a.controllerAs=a.controllerAs||"$ctrl"):a.bindings=o);const r=getMetadata(metadataKeys.require,e);r&&(a.require=r),n&&(a.restrict="A"),replaceLifecycleHooks(e);const i=n?getAttributeName(t):t;defineMetadata(metadataKeys.name,kebabToCamel(i),e),defineMetadata(metadataKeys.declaration,n?Declaration.Directive:Declaration.Component,e),defineMetadata(metadataKeys.options,a,e)}}function registerComponent(e,t){const a=getMetadata(metadataKeys.name,t),n=getMetadata(metadataKeys.options,t),o=getMetadata(metadataKeys.listeners,n.controller),r=getMetadata(metadataKeys.viewChildren,t);(o||r)&&(n.controller=extendWithHostListenersAndChildren(n.controller,o,r)),e.component(a,n)}function extendWithHostListenersAndChildren(e,t={},a={}){const n=Object.keys(t),o=".HostListener",r=Object.keys(a);class i extends e{constructor(e,...t){super(...t),this.$element=e}_updateViewChildren(){r.forEach(e=>{const t=a[e];let n;if("string"!=typeof t.selector){const e=getTypeDeclaration(t.selector);if(e!==Declaration.Component&&e!==Declaration.Directive)return;n=camelToKebab(getTypeName(t.selector))}else n=`#${t.selector}`;const o=Array.prototype.slice.call(this.$element[0].querySelectorAll(n)).map(e=>{const a="string"==typeof t.selector?e.localName:n,o=element(e),r=o&&o.controller(kebabToCamel(a));return t.read?new ElementRef(o):r||new ElementRef(o)}).filter(e=>!!e);o.length?this[e]=t.first?o[0]:o:this[e]=void 0})}$postLink(){super.$postLink&&super.$postLink(),n.forEach(e=>{const{eventName:a}=t[e];this.$element.on(a+o,this[e].bind(this))}),this._updateViewChildren()}$onChanges(e){super.$onChanges&&super.$onChanges(e),this._updateViewChildren()}$onDestroy(){super.$onDestroy&&super.$onDestroy(),n.length&&this.$element.off(o)}}return i.$inject=["$element",...e.$inject||[]],i}function replaceLifecycleHooks(e){const t=e.prototype;getHooksOnCtrlClass(t).forEach(e=>{const a=ngLifecycleHooksMap[e];t[a]=t[e]})}function getHooksOnCtrlClass(e){return Object.keys(ngLifecycleHooksMap).filter(t=>isFunction(e[t]))}function Directive(e){var{selector:t}=e,a=__rest(e,["selector"]);return e=>{const n=getMetadata(metadataKeys.bindings,e);n&&(a.bindToController=n);const o=getMetadata(metadataKeys.require,e);o&&(a.require=o,a.bindToController||(a.bindToController=!0)),a.restrict=a.restrict||"A";const r=isAttributeSelector(t)?getAttributeName(t):t;defineMetadata(metadataKeys.name,kebabToCamel(r),e),defineMetadata(metadataKeys.declaration,Declaration.Directive,e),defineMetadata(metadataKeys.options,a,e)}}function registerDirective(e,t){let a;const n=getMetadata(metadataKeys.name,t),o=getMetadata(metadataKeys.options,t);replaceLifecycleHooks(t);const r=getMetadata(metadataKeys.listeners,t),i=getMetadata(metadataKeys.viewChildren,t);o.controller=r||i?extendWithHostListenersAndChildren(t,r,i):t,a=(()=>o),e.directive(n,a)}function Injectable(e){return t=>{e&&defineMetadata(metadataKeys.name,e,t)}}function Inject(e){return(t,a,n)=>{a&&Array.isArray(t[a])?t[a][n]=e:t.$inject&&(t.$inject[n]=e)}}function registerProviders(e,t){t.forEach(t=>{if(t.provide){const a=t.provide;t.useClass&&t.useClass instanceof Function?e.service(a,t.useClass):t.useFactory&&t.useFactory instanceof Function?(t.useFactory.$inject=t.deps||t.useFactory.$inject,e.factory(a,t.useFactory)):t.useValue&&e.constant(a,t.useValue)}else{const a=getMetadata(metadataKeys.name,t);a&&e.service(a,t)}})}function Pipe(e){return t=>{defineMetadata(metadataKeys.name,e.name,t),defineMetadata(metadataKeys.declaration,Declaration.Pipe,t)}}function registerPipe(e,t){const a=getMetadata(metadataKeys.name,t),n=(...e)=>{const a=e[0].instantiate(t);return a.transform.bind(a)};n.$inject=["$injector",...t.$inject||[]],e.filter(a,n)}function Input(e){return(t,a)=>addBindingToMetadata(t,a,"<?",e)}function Output(e){return(t,a)=>addBindingToMetadata(t,a,"&",e)}function ViewParent(e){return(t,a)=>addRequireToMetadata(t,a,e)}function addBindingToMetadata(e,t,a,n){const o=e.constructor,r=getMetadata(metadataKeys.bindings,o)||{};r[t]=n||a,defineMetadata(metadataKeys.bindings,r,o)}function addRequireToMetadata(e,t,a){const n=e.constructor,o=getMetadata(metadataKeys.require,n)||{};o[t]=a,defineMetadata(metadataKeys.require,o,n)}function NgModule({id:e,bootstrap:t=[],declarations:a=[],imports:n=[],providers:o=[]}){return t=>{const r=n.map(e=>"string"==typeof e?e:e.module.name);e||(e=t.name);const i=module(e,r);a.forEach(e=>{switch(getMetadata(metadataKeys.declaration,e)){case Declaration.Component:registerComponent(i,e);break;case Declaration.Directive:registerDirective(i,e);break;case Declaration.Pipe:registerPipe(i,e)}}),o&&registerProviders(i,o);const{config:s,run:c}=t;s&&i.config(s),c&&i.run(c),t.module=i}}function HostListener(e,t){return(a,n,o)=>{const r=o.value;if("function"!=typeof r)throw new Error(`@HostListener decorator can only be applied to methods not: ${typeof r}`);const i=a.constructor,s=getMetadata(metadataKeys.listeners,i)||{};s[n]={eventName:e,args:t},defineMetadata(metadataKeys.listeners,s,i)}}function ViewChild(e,t={}){return(a,n)=>addBindingToMetadata$1(a,n,e,t.read,!0)}function ViewChildren(e,t={}){return(a,n)=>addBindingToMetadata$1(a,n,e,t.read,!1)}function addBindingToMetadata$1(e,t,a,n,o){const r=e.constructor,i=getMetadata(metadataKeys.viewChildren,r)||{};i[t]={first:o,selector:a,read:n},defineMetadata(metadataKeys.viewChildren,i,r)}const Type=Function;function isType(e){return"function"==typeof e}export{Component,Declaration,Directive,ElementRef,HostListener,Inject,Injectable,Input,NgModule,Output,Pipe,Type,ViewChild,ViewChildren,ViewParent,camelToKebab,defineMetadata,getAttributeName,getMetadata,getTypeDeclaration,getTypeName,isAttributeSelector,isType,kebabToCamel,metadataKeys,ngLifecycleHooksMap,platformBrowserDynamic};